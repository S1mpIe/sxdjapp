<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.finals.sxdj.repository.FarmerMapper">
    <resultMap id="Farmer" type="Farmers" autoMapping="true"/>
    <resultMap id="Goods" type="GoodsData" autoMapping="true">

    </resultMap>
    <resultMap id="Resources" type="Resources" autoMapping="true"/>
    <resultMap id="FarmerOrder" type="FarmerOrder" autoMapping="true"/>
    <resultMap id="Order" type="Order" autoMapping="true">
        <id column="id" property="id"/>
        <collection property="goods" javaType="List" ofType="com.finals.sxdj.model.sqlmodel.OrderData" autoMapping="true"/>
    </resultMap>
    <select id="queryAllFarmers" resultMap="Farmer" >
        select * from farmers
    </select>
    <select id="queryFarmer" resultMap="Farmer">
        select * from farmers where open_id=#{openId};
    </select>
    <select id="queryFarmerById" resultMap="Farmer">
        select * from farmers where id=#{farmerId}
    </select>
    <insert id="insertVerifiedFarmer" useGeneratedKeys="true" keyProperty="id" >
        insert into farmers (open_id, name, phone,introduce, image_address, cate, status) values (#{openId},#{name},#{phone},#{introduce},#{imageAddress},#{cate},'已通过')
    </insert>
    <insert id="insertNewGoods" >
        insert into goods (id,name, origin_id, image_address, category) VALUES (#{id},#{goods.name},#{farmerId},#{goods.imageUrl},#{goods.category});
        insert into goods_number (goods_id, number, unit, sale_number) VALUES (#{id},#{goods.number},#{goods.numberUnit},0);
        insert into goods_price (goods_id, number, unti) VALUES (#{id},#{goods.price},#{goods.numberUnit})
    </insert>
    <insert id="insertPathData">
        insert into path_data (url, id) VALUES (#{url},#{id})
    </insert>
    <insert id="insertResource" >
        insert into resources (owner, cate, path_id) VALUES (#{owner},#{cate},#{ids})
    </insert>
    <select id="getResource" resultMap="Resources">
        select resources.*,pd.url,pd.id as pathId from resources left join path_data pd on pd.id=resources.path_id where resources.cate=#{cate} and resources.owner=#{owner}
    </select>
    <select id="queryAllSold" resultMap="Goods">
        select g.id as id,
               g.image_address as imageUrl,
               g.name as name,
               g.category as category,
               f.name as origin,
               (gn.number-gn.sale_number) as number,
               gn.unit as numberUnit,
               gp.number as price,
               gp.unti as priceUnit,
                g.if_delete as ifDetele
        from     goods g
                 left join farmers f on f.id=g.origin_id
                 left join goods_number gn on gn.goods_id=g.id
                 left join goods_price gp on gp.goods_id=g.id
        where f.id=#{farmerId}
    </select>
    <select id="queryFarmerOrder" resultMap="Order">
        select
            o.id, result_time, put_time, over_time,o. status, pay,
            od.*,
            g.image_address as imageUrl,
            g.name as name,
            sa.name as receiver,
            f.id as originId,
            f.name as origin,
            ep.id as extractPoint,
            ep.address as extractAddress
        from `order` as o
                 left join order_data od on o.id = od.order_id
                 left join goods g on od.goods_id = g.id
                 left join farmers f on f.id=g.origin_id
                 left join shopping_address sa on sa.id=o.address_id
                 left join extract_point ep on ep.id=sa.extract_point
        where g.origin_id=#{farmerId}
    </select>
    <update id="updateFarmer" >
        update farmers set name=#{name}, image_address=#{imageAddress} ,phone=#{phone},introduce=#{introduce} where open_id=#{openId}
    </update>
    <update id="updateGoods">
        update goods
        <set>
            <if test="name != null and name != ''">
                name=#{name},
            </if>
            <if test="imageUrl != null and imageUrl != ''">
                image_address=#{imageUrl},
            </if>
            <if test="category != null and category != ''">
                category=#{category},
            </if>
            <if test="ifDelete != null and ifDelete != ''">
                if_delete=#{ifDelete},
            </if>
        </set>
            where id=#{id};
        update goods_number
        <set>
            <if test="number != null and number != ''">
                number=(#{number} + sale_number),
            </if>
            <if test="numberUnit != null and numberUnit != ''">
                unit=#{numberUnit},
            </if>
        </set>
        where goods_id=#{id};
        update goods_price
        <set>
            <if test="price != null and price != ''">
                number=#{price},
            </if>
        </set>
        where goods_id=#{id};
    </update>
    <delete id="deleteImage" >
        delete from resources where path_id=#{id};
        delete from path_data where id=#{id};
    </delete>
    <delete id="deleteAllResource">
        delete from resources where owner=#{owner} and cate=#{cate}
    </delete>
</mapper>