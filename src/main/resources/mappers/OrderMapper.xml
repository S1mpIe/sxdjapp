<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.finals.sxdj.repository.OrderMapper">
    <resultMap id="Order" type="Order" autoMapping="true">
        <id column="id" property="id"/>
        <collection property="goods" javaType="List" ofType="com.finals.sxdj.model.sqlmodel.OrderData" autoMapping="true"/>
    </resultMap>
    <resultMap id="OrderData" type="OrderData" autoMapping="true">
    </resultMap>
    <resultMap id="GoodsData" type="GoodsData" autoMapping="true"/>
    <resultMap id="ShoppingAddress" type="ShoppingAddress">
        <id column="saId" property="id"/>
        <result column="saName" property="name"/>
        <result column="saPhoneNumber" property="phoneNumber"/>
        <result column="pointId" property="pointId"/>
        <association property="point" javaType="com.finals.sxdj.model.sqlmodel.ExtractPoint" autoMapping="true"/>
    </resultMap>
    <resultMap id="CartGoods" type="CartGoods" >
        <result column="goods_id" property="id"/>
        <result column="goods_number" property="number"/>
    </resultMap>
    <insert id="insertNewOrder" >
        insert into `order` (id,consumer_id,put_time,status,pay,address_id) VALUES (#{orderId},#{consumerId},#{putTime},'待发货',#{pay},#{addressId});
    </insert>
    <insert id="insertNewOrderData">
        insert into order_data (order_id, goods_id, goods_number,goods_price,goods_total_price) VALUES (#{orderId},#{goodsId},#{number},#{price},#{totalPrice})
    </insert>
    <insert id="insertToShoppingCart" >
        insert into shopping_cart (open_id, goods_id, goods_number) VALUES (#{openId},#{goodsId},#{number})
    </insert>
    <insert id="insertNewShoppingAddress">
        insert into shopping_address (consumer_id, name, phone_number, extract_point) VALUES (#{openId},#{name},#{number},#{pointId})
    </insert>
    <update id="updateOrder">
        update `order` set ${cate}=#{value} where id=#{id}
    </update>
    <update id="updateShoppingCart">
        update shopping_cart set goods_number=#{number} where goods_id=#{goodsId} and open_id=#{openId}
    </update>
    <select id="queryOrderById" resultMap="Order">
        select * from `order` where id=#{orderId}
    </select>
    <select id="queryOrdersByConsumer" resultMap="Order">
        select
            o.id, result_time, put_time, over_time,o. status, pay,
            od.*,
            g.image_address as imageUrl,
            g.name as name,
            sa.name as receiver,
            f.id as originId,
            f.name as origin,
            ep.id as extractPoint,
            ep.address as extractAddress
        from `order` as o
                 left join order_data od on o.id = od.order_id
                 left join goods g on od.goods_id = g.id
                 left join farmers f on f.id=g.origin_id
                 left join shopping_address sa on sa.id=o.address_id
                 left join extract_point ep on ep.id=sa.extract_point
        where o.consumer_id=#{consumerId} and o.status like #{status}
    </select>
    <select id="queryOrdersByPoint" resultMap="Order">
        select
            o.id, result_time, put_time, over_time,o. status, pay,
            od.*,
            g.image_address as imageUrl,
            g.name as name,
            sa.name as receiver,
            f.id as originId,
            f.name as origin,
            ep.id as extractPoint,
            ep.address as extractAddress
        from `order` as o
                 left join order_data od on o.id = od.order_id
                 left join goods g on od.goods_id = g.id
                 left join farmers f on f.id=g.origin_id
                 left join shopping_address sa on sa.id=o.address_id
                 left join extract_point ep on ep.id=sa.extract_point
        where o.address_id=#{pointId}
    </select>
    <select id="queryLastOrder" resultMap="Order">
        select * from `order` order by id desc limit 1
    </select>
    <select id="queryById" resultMap="OrderData">
        select * from order_data where order_id=#{orderId}
    </select>
    <select id="queryShoppingCart" resultMap="GoodsData">
        select g.id as id,
               g.image_address as imageUrl,
               g.name as name,
               (gn.number-gn.sale_number) as number,
               gn.unit as numberUnit,
               gp.number as price,
               g.category as category,
               f.name as origin,
               sc.goods_number as selectNumber
        from shopping_cart sc
                 left join goods g on sc.goods_id=g.id
                 left join goods_number gn on sc.goods_id=gn.goods_id
                 left join goods_price gp on gp.goods_id=sc.goods_id
                 left join farmers f on f.id=g.origin_id
        where sc.open_id=#{openId} and g.if_delete=0
    </select>
    <select id="queryShoppingCartGoods" resultMap="CartGoods">
        select *
        from shopping_cart sc
        where sc.open_id=#{openId} and sc.goods_id=#{goodsId};
    </select>
    <select id="queryAllShoppingAddress" resultMap="ShoppingAddress">
        select sa.id as saId,
               sa.name as saName,
               sa.phone_number as saPhoneNumber,
               sa.extract_point as pointId,
               ep.*
            from shopping_address sa
            left join extract_point ep on ep.id=sa.extract_point
            where sa.consumer_id=#{consumerId}
    </select>
    <select id="queryShoppingAddress" resultMap="ShoppingAddress">
        select sa.id as saId,
               sa.name as saName,
               sa.phone_number as saPhoneNumber,
               sa.extract_point as pointId,
               ep.*
        from shopping_address sa
                 left join extract_point ep on ep.id=sa.extract_point
        where sa.id=#{addressId}
    </select>
    <select id="queryGoodsOrders" resultMap="Order">
        select
            o.id, result_time, put_time, over_time,o. status, pay,
            od.*,
            g.image_address as imageUrl,
            g.name as name,
            sa.name as receiver,
            f.id as originId,
            f.name as origin,
            ep.id as extractPoint,
            ep.address as extractAddress
        from `order` as o
                 left join order_data od on o.id = od.order_id
                 left join goods g on od.goods_id = g.id
                 left join farmers f on f.id=g.origin_id
                 left join shopping_address sa on sa.id=o.address_id
                 left join extract_point ep on ep.id=sa.extract_point
        where g.id=#{goodsId}
    </select>
    <delete id="deleteShoppingCartGoods">
        delete from shopping_cart where goods_id=#{goodsId} and open_id=#{openId}
    </delete>
</mapper>